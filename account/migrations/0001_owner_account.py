# Generated by Django 4.2.18 on 2025-03-04 10:00

import os

import autoslug.fields
import django.db.models.deletion
from django.conf import settings
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType
from django.db import migrations, models


def create_owners_group(apps, schema_editor):
    if os.environ.get("DJANGO_SETTINGS_MODULE") == "config.settings.test":
        print("Skipping create_owners_group in test environment.")
        return

    Accommodation = apps.get_model("accommodation", "Accommodation")

    owners_group, created = Group.objects.get_or_create(name="Owners")

    content_type = ContentType.objects.get_for_model(Accommodation)

    can_view_accommodation = Permission.objects.get_or_create(
        codename="view_accommodation",
        name="Can view accommodation",
        content_type=content_type,
    )[0]

    can_change_accommodation = Permission.objects.get_or_create(
        codename="change_accommodation",
        name="Can change accommodation",
        content_type=content_type,
    )[0]

    owners_group.permissions.add(can_view_accommodation, can_change_accommodation)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("accommodation", "0006_accommodation_images"),
    ]

    operations = [
        migrations.CreateModel(
            name="Owner",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=200)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        default="", editable=False, max_length=255, populate_from="name", unique=True
                    ),
                ),
                ("url", models.URLField(blank=True, max_length=500, null=True)),
                ("image", models.BinaryField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.RunPython(create_owners_group),
    ]
